//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SetTopClient.CableOperator {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="ss.oku.edu.cn", ConfigurationName="CableOperator.ClientPortType")]
    public interface ClientPortType {
        
        // CODEGEN: Generating message contract since the operation initiate is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="ss.oku.edu.cn/initiate")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void initiate(SetTopClient.CableOperator.initiate request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="ss.oku.edu.cn/initiate")]
        System.Threading.Tasks.Task initiateAsync(SetTopClient.CableOperator.initiate request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="ss.oku.edu.cn/I2")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void I2(string CustomerID, int EventID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="ss.oku.edu.cn/I2")]
        System.Threading.Tasks.Task I2Async(string CustomerID, int EventID);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="ss.oku.edu.cn")]
    public partial class ClientRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string customerIDField;
        
        private int eventIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
                this.RaisePropertyChanged("CustomerID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int EventID {
            get {
                return this.eventIDField;
            }
            set {
                this.eventIDField = value;
                this.RaisePropertyChanged("EventID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class initiate {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="ss.oku.edu.cn", Order=0)]
        public SetTopClient.CableOperator.ClientRequest ClientRequest;
        
        public initiate() {
        }
        
        public initiate(SetTopClient.CableOperator.ClientRequest ClientRequest) {
            this.ClientRequest = ClientRequest;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ClientPortTypeChannel : SetTopClient.CableOperator.ClientPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientPortTypeClient : System.ServiceModel.ClientBase<SetTopClient.CableOperator.ClientPortType>, SetTopClient.CableOperator.ClientPortType {
        
        public ClientPortTypeClient() {
        }
        
        public ClientPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SetTopClient.CableOperator.ClientPortType.initiate(SetTopClient.CableOperator.initiate request) {
            base.Channel.initiate(request);
        }
        
        public void initiate(SetTopClient.CableOperator.ClientRequest ClientRequest) {
            SetTopClient.CableOperator.initiate inValue = new SetTopClient.CableOperator.initiate();
            inValue.ClientRequest = ClientRequest;
            ((SetTopClient.CableOperator.ClientPortType)(this)).initiate(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task SetTopClient.CableOperator.ClientPortType.initiateAsync(SetTopClient.CableOperator.initiate request) {
            return base.Channel.initiateAsync(request);
        }
        
        public System.Threading.Tasks.Task initiateAsync(SetTopClient.CableOperator.ClientRequest ClientRequest) {
            SetTopClient.CableOperator.initiate inValue = new SetTopClient.CableOperator.initiate();
            inValue.ClientRequest = ClientRequest;
            return ((SetTopClient.CableOperator.ClientPortType)(this)).initiateAsync(inValue);
        }
        
        public void I2(string CustomerID, int EventID) {
            base.Channel.I2(CustomerID, EventID);
        }
        
        public System.Threading.Tasks.Task I2Async(string CustomerID, int EventID) {
            return base.Channel.I2Async(CustomerID, EventID);
        }
    }
}
